---
# Provision cluster & master node
  - name: Switch Ansible's Python interpreter to Python 3
    set_fact:
      ansible_python_interpreter: /usr/bin/python3

  - name: Provision Ubuntu based controlplane node
    block:
      - name: Template controlplane_ubuntu.yaml
        template:
          src: "{{ CRS_PATH }}/controlplane_ubuntu.yaml"
          dest: "/tmp/controlplane_ubuntu.yaml"

      - name: Create Ubuntu master node
        k8s:
          state: present
          src: "/tmp/controlplane_ubuntu.yaml"
          namespace: "{{ NAMESPACE }}"
        register: ubuntu_controlplane_node
    when: IMAGE_OS == "Ubuntu"

  - name: Provision CentOS based controlplane node
    block:
      - name: Verify specific centos image containing newer version of cloud-init is downloaded
        get_url:
          url: "{{ IMAGE_LOCATION_CENTOS }}"
          dest: "{{ IRONIC_IMAGE_DIR }}/{{ IMAGE_NAME_CENTOS }}"
          mode: 0664

      - name: Calculate md5sum of the specific image
        stat:
         path: "{{ IRONIC_IMAGE_DIR }}/{{ IMAGE_NAME_CENTOS }}"
         checksum_algorithm: md5
        register: centos_md5

      - name: Create the md5sum file
        copy:
          content: |
            {{ centos_md5.stat.checksum }}

          dest: "{{ IRONIC_IMAGE_DIR }}/{{ IMAGE_NAME_CENTOS }}.md5sum"
          mode: 0664

      - name: Template controlplane_centos.yaml
        template:
          src: "{{ CRS_PATH }}/controlplane_centos.yaml"
          dest: "/tmp/controlplane_centos.yaml"
        vars:
          IMAGE_NAME: '{{ IMAGE_NAME_CENTOS }}'
          IMAGE_LOCATION: '{{ IMAGE_LOCATION_CENTOS }}'
          IMAGE_USERNAME: '{{ IMAGE_USERNAME_CENTOS }}'

      - name: Create CentOS master node
        k8s:
          state: present
          src: "/tmp/controlplane_centos.yaml"
          namespace: "{{ NAMESPACE }}"
        register: centos_controlplane_node
    when: (IMAGE_OS == "Centos") or
          (IMAGE_OS == "")
