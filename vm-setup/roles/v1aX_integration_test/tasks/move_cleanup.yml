---
  - name: Deprovision Ubuntu based worker node
    block:
      - name: Copy generated workers_ubuntu.yaml
        copy:
          src: "{{ TEMP_GEN_DIR }}/{{ CAPI_VERSION }}_workers_ubuntu.yaml"
          dest: "/tmp/workers_ubuntu.yaml"

      - name: Deprovision Ubuntu worker node.
        k8s:
          state: absent
          src: "/tmp/workers_ubuntu.yaml"
          namespace: "{{ NAMESPACE }}"
        environment:
          KUBECONFIG: "/tmp/target.yaml"
        ignore_errors: yes        
    when: IMAGE_OS == "Ubuntu"

  - name: Deprovision CentOS based worker node
    block:
      - name: Copy generated workers_ubuntu.yaml
        copy:
          src: "{{ TEMP_GEN_DIR }}/{{ CAPI_VERSION }}_workers_centos.yaml"
          dest: "/tmp/workers_centos.yaml"

      - name: Deprovision CentOS worker node.
        k8s:
          state: absent
          src: "/tmp/workers_centos.yaml"
          namespace: "{{ NAMESPACE }}"
        ignore_errors: yes
        environment:
          KUBECONFIG: "/tmp/target.yaml"
    when: (IMAGE_OS == "Centos") or
          (IMAGE_OS == "")

  - name: Deprovision Ubuntu based controlplane node
    block:
      - name: Copy generated controlplane_ubuntu.yaml
        copy:
          src: "{{ TEMP_GEN_DIR }}/{{ CAPI_VERSION }}_controlplane_ubuntu.yaml"
          dest: "/tmp/controlplane_ubuntu.yaml"

      - name: Deprovision Ubuntu master node.
        k8s:
          state: absent
          src: "/tmp/controlplane_ubuntu.yaml"
          namespace: "{{ NAMESPACE }}"
        environment:
          KUBECONFIG: "/tmp/target.yaml"
        ignore_errors: yes
    when: IMAGE_OS == "Ubuntu"

  - name: Deprovision CentOS based controlplane node
    block:
      - name: Copy generated controlplane_centos.yaml
        copy:
          src: "{{ TEMP_GEN_DIR }}/{{ CAPI_VERSION }}_controlplane_centos.yaml"
          dest: "/tmp/controlplane_centos.yaml"

      - name: Deprovision CentOS master node.
        k8s:
          state: absent
          src: "/tmp/controlplane_centos.yaml"
          namespace: "{{ NAMESPACE }}"
        environment:
          KUBECONFIG: "/tmp/target.yaml"       
        ignore_errors: yes
    when: (IMAGE_OS == "Centos") or
          (IMAGE_OS == "")
 
  - name: Template cluster.yaml for v1alpha3
    template:
      src: "{{ TEMP_GEN_DIR }}/{{ CAPI_VERSION }}_cluster_{{ CLUSTER_NAME }}_{{ IMAGE_OS|lower }}.yaml"
      dest: "/tmp/cluster.yaml"

  - name: Deprovision cluster
    k8s:
      state: absent
      src: "/tmp/cluster.yaml"
      namespace: "{{ NAMESPACE }}"
    environment:
      KUBECONFIG: "/tmp/target.yaml"
    ignore_errors: yes
    register: deprovision_cluster

  - name: Check if cluster deprovisioning started.
    shell: "kubectl get cluster -n {{ NAMESPACE }} -o json | jq -r '.items[] | .status.phase'"
    register: deprovision_cluster
    retries: 2
    delay: 20
    until: (deprovision_cluster.stdout == "deleting") or
           (deprovision_cluster.stdout == "Deleting") or
           (deprovision_cluster.stdout == "")
    ignore_errors: yes
    environment:
      KUBECONFIG: "/tmp/target.yaml"

  - name: Check if BMH deprovisioning started.
    shell: "kubectl get bmh -n {{ NAMESPACE }} -o json | jq -r '.items[] | .status.phase'"
    register: deprovision_bmh
    retries: 2
    delay: 20
    until: (deprovision_bmh == "deprovisioning") 
    ignore_errors: yes
    environment:
      KUBECONFIG: "/tmp/target.yaml"
