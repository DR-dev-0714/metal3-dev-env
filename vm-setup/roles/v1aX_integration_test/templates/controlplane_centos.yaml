{% if CAPI_VERSION == 'v1alpha2' %}
apiVersion: cluster.x-k8s.io/v1alpha2
kind: Machine
metadata:
  name: {{ CLUSTER_NAME }}-controlplane-0
  labels:
    cluster.x-k8s.io/control-plane: "true"
    cluster.x-k8s.io/cluster-name: "{{ CLUSTER_NAME }}"
spec:
  version: {{ KUBERNETES_VERSION }}
  bootstrap:
    configRef:
      apiVersion: bootstrap.cluster.x-k8s.io/{{ CAPI_VERSION }}
      kind: KubeadmConfig
      name: {{ CLUSTER_NAME }}-controlplane-0
  infrastructureRef:
    apiVersion: infrastructure.cluster.x-k8s.io/{{ CAPI_VERSION }}
    kind: BareMetalMachine
    name: {{ CLUSTER_NAME }}-controlplane-0
---
apiVersion: infrastructure.cluster.x-k8s.io/v1alpha2
kind: BareMetalMachine
metadata:
  name: {{ CLUSTER_NAME }}-controlplane-0
spec:
  image:
    url: {{ IMAGE_URL }}
    checksum: {{ IMAGE_CHECKSUM }}
---
apiVersion: bootstrap.cluster.x-k8s.io/v1alpha2
kind: KubeadmConfig
metadata:
  name: {{ CLUSTER_NAME }}-controlplane-0
spec:
  initConfiguration:
    nodeRegistration:
      name: {{ " '{{ ds.meta_data.name }}' " }}
      kubeletExtraArgs:
        node-labels: 'metal3.io/uuid={{ '{{ ds.meta_data.uuid }}' }}'
        provider-id: 'metal3://{{ '{{ ds.meta_data.uuid }}' }}'
  joinConfiguration:
    nodeRegistration:
      name: {{ " '{{ ds.meta_data.name }}' " }}
      kubeletExtraArgs:
        node-labels: 'metal3.io/uuid={{ '{{ ds.meta_data.uuid }}' }}'
        provider-id: 'metal3://{{ '{{ ds.meta_data.uuid }}' }}'
  preKubeadmCommands:
    - ifup eth1
    - yum update -y
    - yum install yum-utils -y
    - yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo
    - setenforce 0
    - sed -i 's/^SELINUX=enforcing$/SELINUX=permissive/' /etc/selinux/config
    - yum install docker-ce docker-ce-cli --disableexcludes=kubernetes --nobest -y
    - >-
      yum install gcc kernel-headers kernel-devel keepalived
      device-mapper-persistent-data lvm2
      kubelet kubeadm kubectl --disableexcludes=kubernetes -y
    - usermod -aG docker centos
    - systemctl enable --now docker keepalived kubelet
  postKubeadmCommands:
    - mkdir -p /home/centos/.kube
    - cp /etc/kubernetes/admin.conf /home/centos/.kube/config
    - chown centos:centos /home/centos/.kube/config
  files:
    - path: /etc/keepalived/keepalived.conf
      content: |
        ! Configuration File for keepalived
        global_defs {
            notification_email {
            sysadmin@example.com
            support@example.com
            }
            notification_email_from lb@example.com
            smtp_server localhost
            smtp_connect_timeout 30
        }
        vrrp_instance VI_1 {
            state MASTER
            interface eth1
            virtual_router_id 1
            priority 101
            advert_int 1
            virtual_ipaddress {
                {{ CLUSTER_APIENDPOINT_HOST }}
            }
        }
    - path: /etc/sysconfig/network-scripts/ifcfg-eth1
      owner: root:root
      permissions: '0644'
      content: |
        BOOTPROTO=dhcp
        DEVICE=eth1
        ONBOOT=yes
        TYPE=Ethernet
        USERCTL=no
    - path: /etc/yum.repos.d/kubernetes.repo
      owner: root:root
      permissions: '0644'
      content: |
        [kubernetes]
        name=Kubernetes
        baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64
        enabled=1
        gpgcheck=1
        repo_gpgcheck=0
        gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
    - path: /tmp/akeys
      owner: root:root
      permissions: '0600'
      content: {{ SSH_PUB_KEY_CONTENT }}
{% else %}
kind: KubeadmControlPlane
apiVersion: controlplane.cluster.x-k8s.io/v1alpha3
metadata:
  name: {{ CLUSTER_NAME }}-controlplane
spec:
  replicas: 1
  version: {{ KUBERNETES_VERSION }}
  infrastructureTemplate:
    kind: Metal3MachineTemplate
    apiVersion: infrastructure.cluster.x-k8s.io/{{ CAPI_VERSION }}
    name: {{ CLUSTER_NAME }}-controlplane
  kubeadmConfigSpec:
    joinConfiguration:
      nodeRegistration:
        name: {{ " '{{ ds.meta_data.name }}' " }}
        kubeletExtraArgs:
          node-labels: 'metal3.io/uuid={{ '{{ ds.meta_data.uuid }}' }}'
          provider-id: 'metal3://{{ '{{ ds.meta_data.uuid }}' }}'
    initConfiguration:
      nodeRegistration:
        name: {{ " '{{ ds.meta_data.name }}' " }}
        kubeletExtraArgs:
          node-labels: 'metal3.io/uuid={{ '{{ ds.meta_data.uuid }}' }}'
          provider-id: 'metal3://{{ '{{ ds.meta_data.uuid }}' }}'
    clusterConfiguration:
      apiServer:
        extraArgs:
    preKubeadmCommands:
      - ifup eth1
      - mv /tmp/akeys /home/centos/.ssh/authorized_keys
      - chown centos:centos /home/centos/.ssh/authorized_keys
      - yum update -y
      - yum install yum-utils -y
      - yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo
      - setenforce 0
      - sed -i 's/^SELINUX=enforcing$/SELINUX=permissive/' /etc/selinux/config
      - yum install docker-ce docker-ce-cli --disableexcludes=kubernetes --nobest -y
      - >-
        yum install gcc kernel-headers kernel-devel keepalived
        device-mapper-persistent-data lvm2
        kubelet kubeadm kubectl --disableexcludes=kubernetes -y
      - usermod -aG docker centos
      - systemctl enable --now docker keepalived kubelet
    postKubeadmCommands:
      - mkdir -p /home/centos/.kube
      - cp /etc/kubernetes/admin.conf /home/centos/.kube/config
      - chown centos:centos /home/centos/.kube/config
    files:
      - path: /etc/keepalived/keepalived.conf
        content: |
          ! Configuration File for keepalived
          global_defs {
              notification_email {
              sysadmin@example.com
              support@example.com
              }
              notification_email_from lb@example.com
              smtp_server localhost
              smtp_connect_timeout 30
          }
          vrrp_instance VI_1 {
              state MASTER
              interface eth1
              virtual_router_id 1
              priority 101
              advert_int 1
              virtual_ipaddress {
                  {{ CLUSTER_APIENDPOINT_HOST }}
              }
          }
      - path: /etc/sysconfig/network-scripts/ifcfg-eth1
        owner: root:root
        permissions: '0644'
        content: |
          BOOTPROTO=dhcp
          DEVICE=eth1
          ONBOOT=yes
          TYPE=Ethernet
          USERCTL=no
      - path: /etc/yum.repos.d/kubernetes.repo
        owner: root:root
        permissions: '0644'
        content: |
          [kubernetes]
          name=Kubernetes
          baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64
          enabled=1
          gpgcheck=1
          repo_gpgcheck=0
          gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
      - path: /tmp/akeys
        owner: root:root
        permissions: '0600'
        content: {{ SSH_PUB_KEY_CONTENT }}
---
apiVersion: infrastructure.cluster.x-k8s.io/{{ CAPI_VERSION }}
kind: Metal3MachineTemplate
metadata:
  name: {{ CLUSTER_NAME }}-controlplane
spec:
  template:
    spec:
      image:
        url: {{ IMAGE_URL }}
        checksum: {{ IMAGE_CHECKSUM }}
{% endif %}
