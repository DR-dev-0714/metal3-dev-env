apiVersion: cluster.x-k8s.io/v1alpha2
kind: MachineDeployment
metadata:
  name: ${CLUSTER_NAME}-md-0
  labels:
    cluster.x-k8s.io/cluster-name: ${CLUSTER_NAME}
    nodepool: nodepool-0
spec:
  replicas: 1
  selector:
    matchLabels:
      cluster.x-k8s.io/cluster-name: ${CLUSTER_NAME}
      nodepool: nodepool-0
  template:
    metadata:
      labels:
        cluster.x-k8s.io/cluster-name: ${CLUSTER_NAME}
        nodepool: nodepool-0
    spec:
      version: ${KUBERNETES_VERSION}
      bootstrap:
        configRef:
          name: ${CLUSTER_NAME}-md-0
          apiVersion: bootstrap.cluster.x-k8s.io/v1alpha2
          kind: KubeadmConfigTemplate
      infrastructureRef:
        name: ${CLUSTER_NAME}-md-0
        apiVersion: infrastructure.cluster.x-k8s.io/v1alpha2
        kind: BareMetalMachineTemplate
---
apiVersion: infrastructure.cluster.x-k8s.io/v1alpha2
kind: BareMetalMachineTemplate
metadata:
  name: ${CLUSTER_NAME}-md-0
spec:
  template:
    spec:
      image:
        url: ${IMAGE_URL}
        checksum: ${IMAGE_CHECKSUM}
---
apiVersion: bootstrap.cluster.x-k8s.io/v1alpha2
kind: KubeadmConfigTemplate
metadata:
  name: ${CLUSTER_NAME}-md-0
spec:
  template:
    spec:
      joinConfiguration:
        nodeRegistration:
          name: '{{ ds.meta_data.name }}'
          kubeletExtraArgs:
            node-labels: 'metal3.io/uuid={{ ds.meta_data.uuid }}'
      preKubeadmCommands:
        - ip link set dev enp2s0 up
        - dhclient enp2s0
        - mv /tmp/akeys /home/ubuntu/.ssh/authorized_keys
        - chown ubuntu:ubuntu /home/ubuntu/.ssh/authorized_keys
        - apt update -y
        - apt install apt-transport-https ca-certificates curl gnupg-agent software-properties-common -y
        - curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add -
        - add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
        - apt update -y
        - apt install docker-ce docker-ce-cli containerd.io -y
        - usermod -aG docker ubuntu
        - curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add -
        - echo 'deb https://apt.kubernetes.io/ kubernetes-xenial main' > /etc/apt/sources.list.d/kubernetes.list
        - apt update
        - apt install -y kubelet kubeadm kubectl
        - systemctl enable --now kubelet
      files:
        - path: /etc/network/interfaces
          owner: root:root
          permissions: '0644'
          content: |
            # interfaces(5) file used by ifup(8) and ifdown(8)
            auto lo
            iface lo inet loopback
            ## To configure a dynamic IP address
            auto enp2s0
            iface enp2s0 inet dhcp
        - path: /tmp/akeys
          owner: root:root
          permissions: '0644'
          content: ${SSH_PUB_KEY_CONTENT}
